read_verilog -sv <<EOT
module top(input [3:0] x, output reg [3:0] y, z);

always_comb begin
	int k;
	int i = 0;
	i = x;
	y = i;
	k = y;

	assert(4'(i) == x);
	assert(y == 4'(i));
	assert(4'(k) == y);
end

always_comb begin
	int k;
	int i = 0;
	i = ~x;
	z = i;
	k = z;
	assert(4'(i) == ~x);
	assert(z == 4'(i));
	assert(4'(k) == z);
end

always @(*) begin
	int k = 32'b0;
	assert(k == 32'b0);
end
endmodule
EOT
hierarchy; proc; opt
sat -verify -seq 1 -tempinduct -prove-asserts -show-all
